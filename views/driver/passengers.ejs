<%- include('../partials/header', { title: 'Passenger Management | Driver Dashboard' }) %>
<%- include('../partials/navbar-driver') %>

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <!-- Alert Container -->
            <div id="alertContainer"></div>

            <!-- Current Trip Info -->
            <div class="card mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Current Trip: <%= currentTrip ? currentTrip.route : 'No active trip' %></h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <p class="mb-1"><strong>Bus:</strong> <%= bus ? bus.busName : 'N/A' %> (<%= bus ? bus.busNumber : 'N/A' %>)</p>
                            <p class="mb-1"><strong>Driver:</strong> <%= bus ? bus.driverName : 'N/A' %></p>
                            <p class="mb-1"><strong>Next Stop:</strong> <%= currentTrip ? currentTrip.nextStop : 'N/A' %></p>
                        </div>
                        <div class="col-md-6">
                            <p class="mb-1"><strong>Passengers:</strong> <span id="currentPassengerCount"><%= passengers ? passengers.length : '0' %></span>/<%= bus ? bus.capacity : '0' %></p>
                            <p class="mb-1"><strong>Route:</strong> <%= currentTrip ? currentTrip.route : 'N/A' %></p>
                            <p class="mb-0"><strong>Status:</strong> <span class="badge bg-success">In Service</span></p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Passenger List -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Current Passengers for <%= bus ? bus.busNumber : 'Bus' %></h5>
                    <div class="input-group" style="max-width: 300px;">
                        <input type="text" id="searchPassenger" class="form-control" placeholder="Search passengers...">
                        <button class="btn btn-outline-secondary" type="button" id="searchButton">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-hover mb-0">
                            <thead class="table-light">
                                <tr>
                                    <th>#</th>
                                    <th>Name</th>
                                    <th>Student ID</th>
                                    <th>Boarded At</th>
                                    <th>Destination</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody id="passengerList">
                                <% if (passengers && passengers.length > 0) { %>
                                    <% passengers.forEach((passenger, index) => { %>
                                        <tr id="passenger-<%= passenger._id %>">
                                            <td><%= index + 1 %></td>
                                            <td><%= passenger.name %></td>
                                            <td><%= passenger.studentId %></td>
                                            <td><%= new Date(passenger.boardingTime).toLocaleTimeString() %></td>
                                            <td><%= passenger.destination || 'Main Campus' %></td>
                                            <td><span class="badge bg-success">On Board</span></td>
                                            <td>
                                                <button class="btn btn-sm btn-outline-danger" 
                                                        onclick="removePassenger('<%= passenger._id %>')"
                                                        title="Remove Passenger"
                                                        data-bs-toggle="tooltip">
                                                    <i class="fas fa-user-minus"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    <% }); %>
                                <% } else { %>
                                    <tr>
                                        <td colspan="7" class="text-center py-4">
                                            <i class="fas fa-users-slash fa-3x text-muted mb-3"></i>
                                            <p class="mb-0">No passengers on board</p>
                                        </td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer d-flex justify-content-between align-items-center">
                    <div class="text-muted">
                        Showing <span id="showingCount"><%= passengers ? passengers.length : '0' %></span> of <span id="totalCount"><%= passengers ? passengers.length : '0' %></span> passengers
                    </div>
                    <div>
                        <button class="btn btn-sm btn-outline-primary" onclick="window.location.reload()">
                            <i class="fas fa-sync-alt me-1"></i> Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Scan QR Code Modal -->
<div class="modal fade" id="scanQRModal" tabindex="-1" aria-labelledby="scanQRModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="scanQRModalLabel">Scan QR Code</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <div id="qr-reader" style="width: 100%"></div>
                <div id="qr-reader-results"></div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script>
// Show alert message
function showAlert(message, type = 'info') {
    const alertHtml = `
        <div class="alert alert-${type} alert-dismissible fade show" role="alert">
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>`;
    
    const alertContainer = document.getElementById('alertContainer');
    if (alertContainer) {
        alertContainer.innerHTML = alertHtml;
        
        // Auto-dismiss after 5 seconds
        setTimeout(() => {
            const alert = alertContainer.querySelector('.alert');
            if (alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            }
        }, 5000);
    }
}

// Remove passenger function
async function removePassenger(passengerId) {
    if (!confirm('Are you sure you want to remove this passenger from the bus?')) {
        return;
    }
    
    try {
        const response = await fetch(`/driver/passengers/remove/${passengerId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
        });
        
        const data = await response.json();
        
        if (response.ok && data.success) {
            // Remove the row from the table
            const row = document.getElementById(`passenger-${passengerId}`);
            if (row) {
                row.remove();
                showAlert('Passenger removed successfully', 'success');
                
                // Update passenger count
                const countElement = document.getElementById('currentPassengerCount');
                if (countElement) {
                    countElement.textContent = data.passengerCount || '0';
                }
                
                // Update showing count
                const showingCount = document.getElementById('showingCount');
                const totalCount = document.getElementById('totalCount');
                if (showingCount && totalCount) {
                    const newCount = parseInt(showingCount.textContent) - 1;
                    showingCount.textContent = newCount;
                    totalCount.textContent = newCount;
                }
                
                // If no more passengers, show empty state
                const passengerList = document.getElementById('passengerList');
                const rows = passengerList.getElementsByTagName('tr');
                if (rows.length === 0) {
                    passengerList.innerHTML = `
                        <tr>
                            <td colspan="7" class="text-center py-4">
                                <i class="fas fa-users-slash fa-3x text-muted mb-3"></i>
                                <p class="mb-0">No passengers on board</p>
                            </td>
                        </tr>`;
                }
            }
        } else {
            throw new Error(data.message || 'Failed to remove passenger');
        }
    } catch (error) {
        console.error('Error removing passenger:', error);
        showAlert(error.message || 'Failed to remove passenger', 'danger');
    }
}

// Set up search functionality
function setupSearch() {
    const searchInput = document.getElementById('searchPassenger');
    const searchButton = document.getElementById('searchButton');
    
    if (!searchInput || !searchButton) return;
    
    const handleSearch = () => {
        const searchTerm = searchInput.value.toLowerCase();
        const rows = document.querySelectorAll('#passengerList tr');
        
        let visibleCount = 0;
        rows.forEach(row => {
            if (row.id && row.id.startsWith('passenger-')) {
                const text = row.textContent.toLowerCase();
                const isVisible = text.includes(searchTerm);
                row.style.display = isVisible ? '' : 'none';
                if (isVisible) visibleCount++;
            }
        });
        
        // Update showing count
        const showingCount = document.getElementById('showingCount');
        if (showingCount) {
            showingCount.textContent = visibleCount;
        }
    };
    
    searchInput.addEventListener('input', handleSearch);
    searchButton.addEventListener('click', handleSearch);
}

// Initialize QR Code Scanner (placeholder)
function initQRScanner() {
    console.log('QR code scanner would initialize here');
    // This will be implemented when we add QR code scanning
}

// Initialize the page
document.addEventListener('DOMContentLoaded', function() {
    // Set up the search functionality
    setupSearch();
    
    // Initialize tooltips
    const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
    tooltipTriggerList.map(function (tooltipTriggerEl) {
        return new bootstrap.Tooltip(tooltipTriggerEl);
    });
    
    // Initialize QR code scanner button if it exists
    const scanButton = document.querySelector('[data-bs-target="#scanQRModal"]');
    if (scanButton) {
        scanButton.addEventListener('click', function() {
            initQRScanner();
        });
    }
});
</script>

<%- include('../partials/footer') %>
